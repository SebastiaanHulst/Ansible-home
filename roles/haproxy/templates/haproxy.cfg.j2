global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
        maxconn 2048
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

        #tune.ssl.default-dh-param 2048
        tune.ssl.default-dh-param 4096

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	#ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:!ECDH+AES128:!ECDH+3DES:!aNULL:!MD5:!DSS:!EDH:!KRB5:!RSA:!DH
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
        
listen stats 
    bind *:1936
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /stats
    stats admin if TRUE
    stats auth japie:krekel

defaults
	log	global
        option forwardfor
        option http-server-close
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#frontend www-http
#   bind haproxy.lan:80
#   redirect scheme https if !{ ssl_fc }

frontend www-https
   bind haproxy.lan:80
   bind haproxy.lan:443 ssl crt /etc/haproxy/certs/djieno.com.pem crt /etc/haproxy/certs/djieno.gq.pem crt /etc/haproxy/certs/chebna.gq.pem
   redirect scheme https if !{ ssl_fc }
   http-response set-header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload"
      http-response set-header X-Frame-Options DENY
      http-response set-header X-Content-Type-Options nosniff
   #http-response add-header Public-Key-Pins "pin-sha256=\"YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg=\"; pin-sha256=\"sRHdihwgkaib1P1gxX8HFszlD+7/gTfNvuAybgLPNis=\"; max-age=15768000"
   http-response add-header Public-Key-Pins "pin-sha256=\"YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg=\"; pin-sha256=\"sRHdihwgkaib1P1gxX8HFszlD+7/gTfNvuAybgLPNis=\"; max-age=15768000; includeSubdomains; preload"
#   redirect prefix https://www.djieno.com code 301 if { hdr(host) -i djieno.com }

   acl web path_reg ^$|^/$
   acl letsencrypt-acl path_beg /.well-known/acme-challenge/
   acl subsonic path_beg /subsonic
   acl sickrage path_beg /sickrage
   acl transmission path_beg /transmission
   acl sabnzbd path_beg /sabnzbd
   acl gogs path_beg /gogs
   acl domoticz path_beg /domoticz
#   acl plexpy path_beg /plexpy
   acl zoneminder path_beg /zm

   use_backend www-backend if web
   use_backend letsencrypt-backend if letsencrypt-acl
   use_backend subsonic-backend if subsonic
   use_backend sickrage-backend if sickrage
   use_backend transmission-backend if transmission
   use_backend sabnzbd-backend if sabnzbd
   use_backend gogs-backend if gogs
   use_backend domoticz-backend if domoticz
#   use_backend plexpy-backend if plexpy
   use_backend zoneminder-backend if zoneminder
   default_backend www-backend

backend www-backend
   server nginx nginx.lan:80 check

backend subsonic-backend
   server  subsonic1 subsonic.lan:4040 check

backend sickrage-backend
   server  sickrage sickrage.lan:8081 check

backend transmission-backend
   server rubuntu rubuntu.djieno.com:9091 check

backend sabnzbd-backend
   option httpclose
   option forwardfor
   server rubuntu rubuntu.djieno.com:8080/sabnzbd

backend gogs-backend
   http-request set-header X-Forwarded-Port %[dst_port]
   reqrep ^([^\ ]*)\ /gogs/(.*) \1\ /\2
   server  gogs1 gogs.lan:3000 check

backend domoticz-backend
#   http-request set-header X-Forwarded-Port %[dst_port]
#  reqrep ^([^\ ]*)\ /gogs/(.*) \1\ /\2
   #server  domoticz1 domoticz.lan:8080 check
   server  domoticz1 192.168.1.59:8080 check

#backend plexpy-backend
#  http-request set-header X-Forwarded-Port %[dst_port]
#  server plex plex.lan:8181 check

backend zoneminder-backend
#   http-request set-header X-Forwarded-Port %[dst_port]
#  reqrep ^([^\ ]*)\ /gogs/(.*) \1\ /\2
   #server  domoticz1 domoticz.lan:8080 check
   server  zoneminder01 zoneminder.lan:80 check

backend letsencrypt-backend
   server letsencrypt 127.0.0.1:54321
